#first steps
class PartyAnimal:
    x=0
    
    def party(self):
        self.x=self.x + 1
        print("So far", self.x)
        
an = PartyAnimal()

an.party()
an.party()
an.party()

#dir() use
class PartyAnimal:
    x=0
    
    def party(self):
        self.x=self.x + 1
        print("So far", self.x)
        
an = PartyAnimal()

print("Type", type(an))
print("Dir", dir(an))

#dir in strings
x = 'hello there'
print(dir(x))


#Constructor and destructor

class PartyAnimal:
    x=0
    
    def __init__(self):
        print('I am constructed')
    
    def party(self):
        self.x=self.x + 1
        print("So far", self.x)
        
    def __del__(self):
        print('I am destructed', self.x)
        
        
an = PartyAnimal()

an.party()
an.party()
an = 42
print('an contains' ,an)


#constructor two different parameters

class PartyAnimal:
    x=0
    name = ""
    def __init__(self, z):
        self.name = z
        print( self.name , "constructed")
    
    def party(self):
        self.x=self.x + 1
        print(self.name, "party count" , self.x)
        
s = PartyAnimal("Sally")
s.party()

j = PartyAnimal("Jim")
j.party()
s.party()

#INHERITANCE

class PartyAnimal:
    x=0
    name = ""
    def __init__(self, nam):
        self.name = nam
        print( self.name , "constructed")
    
    def party(self):
        self.x=self.x + 1
        print(self.name, "party count" , self.x)

#EXTENSION        
class FootballFan(PartyAnimal):
    points = 0
    def touchdown(self):
        self.points = self.points + 7
        self.party()
        print(self.name, "points" , self.points)        
        
s = PartyAnimal("Sally")
s.party()

j = FootballFan("Jim")
j.party()
j.touchdown()

#FootballFan is a class which extends PartyAnimal, It has all the capabilities of PartyAnimal and more
